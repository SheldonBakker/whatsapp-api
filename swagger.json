{
  "openapi": "3.0.0",
  "info": {
    "title": "WhatsApp API",
    "description": "Simplified WhatsApp Web API for session management and messaging. This API provides 8 core endpoints for managing WhatsApp sessions and sending messages.",
    "version": "2.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/SheldonBakker/whatsapp-api/issues"
    }
  },
  "servers": [
    {
      "url": "https://app.remlic.co.za/",
      "description": "Production server"
    },
    {
      "url": "http://localhost:5656/",
      "description": "Local development server"
    },
    {
      "url": "http://localhost:3000/",
      "description": "Local development server (alternative port)"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoint to verify API status"
    },
    {
      "name": "Session",
      "description": "Manage WhatsApp Web sessions - start, restart, terminate, and get QR codes"
    },
    {
      "name": "Messaging",
      "description": "Send messages through WhatsApp sessions"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health Check",
        "description": "Get comprehensive health information about the API and system including uptime, memory usage, and session statistics",
        "security": [{"apiKeyAuth": []}],
        "responses": {
          "200": {
            "description": "Health information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/start/{sessionId}": {
      "get": {
        "tags": ["Session"],
        "summary": "Start Session",
        "description": "Start a new WhatsApp session or confirm an existing session is starting/running",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session already running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "202": {
            "description": "Session initialization accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid session ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/qr/{sessionId}": {
      "get": {
        "tags": ["Session"],
        "summary": "Get QR Code Data",
        "description": "Get QR code data for session authentication. Returns the QR code string that can be used to generate a QR image.",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR code data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRResponse"
                }
              }
            }
          },
          "202": {
            "description": "Session is initializing, QR code not ready yet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/qr/{sessionId}/image": {
      "get": {
        "tags": ["Session"],
        "summary": "Get QR Code Image",
        "description": "Get QR code as a PNG image for session authentication. Returns the QR code as an image that can be scanned with WhatsApp mobile app.",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR code image retrieved successfully",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "202": {
            "description": "Session is initializing, QR code not ready yet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/restart/{sessionId}": {
      "get": {
        "tags": ["Session"],
        "summary": "Restart Session",
        "description": "Restart an existing WhatsApp session. This will reload the session and re-establish the connection.",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session restarted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/terminate/{sessionId}": {
      "get": {
        "tags": ["Session"],
        "summary": "Terminate Session",
        "description": "Terminate a WhatsApp session, log out, and delete session data.",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session terminated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/all": {
      "get": {
        "tags": ["Session"],
        "summary": "Get All Sessions",
        "description": "Get a list of all active WhatsApp sessions with their current status.",
        "security": [{"apiKeyAuth": []}],
        "responses": {
          "200": {
            "description": "Sessions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSessionsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sendMessage/{sessionId}": {
      "post": {
        "tags": ["Messaging"],
        "summary": "Send Message",
        "description": "Send a message through a WhatsApp session. Supports text, media, location, buttons, lists, contacts, and polls.",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the WhatsApp session",
            "schema": {
              "type": "string",
              "example": "my-session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              },
              "examples": {
                "text_message": {
                  "summary": "Send Text Message",
                  "value": {
                    "chatId": "123456789@c.us",
                    "contentType": "string",
                    "content": "Hello World!"
                  }
                },
                "image_message": {
                  "summary": "Send Image",
                  "value": {
                    "chatId": "123456789@c.us",
                    "contentType": "MessageMedia",
                    "content": {
                      "mimetype": "image/jpeg",
                      "data": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=",
                      "filename": "image.jpg"
                    }
                  }
                },
                "location_message": {
                  "summary": "Send Location",
                  "value": {
                    "chatId": "123456789@c.us",
                    "contentType": "Location",
                    "content": {
                      "latitude": -6.2,
                      "longitude": 106.8,
                      "description": "Jakarta"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or content type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Session not found or not connected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-08T10:49:55.599Z"
          },
          "service": {
            "type": "string",
            "example": "whatsapp-api"
          },
          "system": {
            "type": "object",
            "properties": {
              "uptime": {
                "type": "number",
                "example": 19.438612792
              },
              "memory": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number",
                    "example": 24782376960
                  },
                  "free": {
                    "type": "number",
                    "example": 13089632256
                  },
                  "used": {
                    "type": "number",
                    "example": 11692744704
                  },
                  "usagePercent": {
                    "type": "number",
                    "example": 47
                  }
                }
              },
              "cpu": {
                "type": "number",
                "example": 8
              },
              "platform": {
                "type": "string",
                "example": "linux"
              },
              "nodeVersion": {
                "type": "string",
                "example": "v18.19.1"
              }
            }
          },
          "sessions": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number",
                "example": 0
              },
              "status": {
                "type": "object",
                "example": {}
              }
            }
          }
        }
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Session initialization accepted. Please poll status."
          },
          "state": {
            "type": "string",
            "enum": ["INITIALIZING", "CONNECTED", "DISCONNECTED", "TERMINATED"],
            "example": "INITIALIZING"
          }
        }
      },
      "QRResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "qr": {
            "type": "string",
            "description": "QR code data string",
            "example": "2@ABC123DEF456..."
          }
        }
      },
      "AllSessionsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "sessions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string",
                  "example": "my-session"
                },
                "state": {
                  "type": "string",
                  "example": "CONNECTED"
                },
                "isReady": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": ["chatId", "contentType", "content"],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "The Chat ID where the message will be sent (Group or Individual)",
            "example": "123456789@c.us"
          },
          "contentType": {
            "type": "string",
            "enum": ["string", "MessageMedia", "MessageMediaFromURL", "Location", "Buttons", "List", "Contact", "Poll"],
            "description": "The type of message content",
            "example": "string"
          },
          "content": {
            "oneOf": [
              {
                "type": "string",
                "description": "Text message content",
                "example": "Hello World!"
              },
              {
                "type": "object",
                "description": "Media content object",
                "properties": {
                  "mimetype": {
                    "type": "string",
                    "example": "image/jpeg"
                  },
                  "data": {
                    "type": "string",
                    "description": "Base64 encoded media data",
                    "example": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII="
                  },
                  "filename": {
                    "type": "string",
                    "example": "image.jpg"
                  }
                }
              },
              {
                "type": "object",
                "description": "Location content",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "example": -6.2
                  },
                  "longitude": {
                    "type": "number",
                    "example": 106.8
                  },
                  "description": {
                    "type": "string",
                    "example": "Jakarta"
                  }
                }
              }
            ]
          },
          "options": {
            "type": "object",
            "description": "Additional message options",
            "properties": {
              "caption": {
                "type": "string",
                "description": "Caption for media messages"
              },
              "quotedMessageId": {
                "type": "string",
                "description": "ID of message to quote"
              },
              "mentions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of contact IDs to mention"
              }
            }
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "object",
            "description": "Sent message object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "fromMe": {
                    "type": "boolean",
                    "example": true
                  },
                  "remote": {
                    "type": "string",
                    "example": "123456789@c.us"
                  },
                  "id": {
                    "type": "string",
                    "example": "ABC123DEF456"
                  }
                }
              },
              "body": {
                "type": "string",
                "example": "Hello World!"
              },
              "type": {
                "type": "string",
                "example": "chat"
              },
              "timestamp": {
                "type": "number",
                "example": 1638360000
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}